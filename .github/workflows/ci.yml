name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read # for checkout

jobs:
  commitlint:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: v22.2.0
      - name: Install commitlint
        run: yarn add commitlint@latest conventional-changelog-conventionalcommits @commitlint/config-conventional
      - name: Validate current commit (last commit) with commitlint
        if: github.event_name == 'push'
        run: npx commitlint --last --verbose
      - name: Validate PR commits with commitlint
        if: github.event_name == 'pull_request'
        run: npx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose

  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: v22.2.0
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Run linter
        run: yarn eslint-ci
      - name: Run prettier
        run: yarn prettier-ci
      - name: Run build
        run: yarn build
      - name: Upload the .output folder
        uses: actions/upload-artifact@v4
        with:
          include-hidden-files: true
          name: output
          path: .output

  release:
    name: Release
    if: github.ref == 'refs/heads/main'
    needs: [commitlint, validate]
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    outputs:
      version: ${{ steps.release.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release
      - name: Version
        run: echo "The next version is ${{ steps.release.outputs.version }}"

  push_to_registry:
    name: Push Docker image to Docker Hub
    needs: release
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Download the .output folder
        uses: actions/download-artifact@v4
        with:
          name: output
          path: ./.output

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: padbro/ordinary-helper-panel

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            padbro/ordinary-helper-panel:latest
            padbro/ordinary-helper-panel:${{ needs.release.outputs.version }}
          labels: ${{ steps.meta.outputs.labels }}
